name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install
          # cd apps/frontend && npm install
          cd ../backend/auth-service && npm install
          # cd ../../cms-service && npm install
          # cd ../../ai-service && npm install

      - name: Run tests
        run: |
          # cd apps/frontend && npm test
          cd ../backend/auth-service && npm test
          # cd ../../cms-service && npm test
          # cd ../../ai-service && npm test
          
  build_and_push:
    needs: build_and_test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service] 
        # service: [frontend, auth-service, cms-service, ai-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set service path
        id: service_path
        run: |
          if [ "${{ matrix.service }}" == "frontend" ]; then
            echo "::set-output name=path::apps/frontend"
          else
            echo "::set-output name=path::apps/backend/${{ matrix.service }}"
          fi
          
      - name: Build and push image for ${{ matrix.service }}
        run: |
          docker build ${{ steps.service_path.outputs.path }} -t ghcr.io/${{ github.repository }}/${{ matrix.service }}:latest
          docker push ghcr.io/${{ github.repository }}/${{ matrix.service }}:latest
      
  deploy_to_kubernetes:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Auth Service to Kubernetes
        uses: k8s-deploy-action@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          manifests: |
            ./k8s/auth-service-deployment.yaml
